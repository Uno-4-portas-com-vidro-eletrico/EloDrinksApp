name: React Native Expo CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  EXPO_CLI_VERSION: 'latest'

jobs:
  test-and-lint:
    name: Tests & Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run TypeScript check
        run: npx tsc --noEmit

  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: test-and-lint
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🏗 Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup React Native environment
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: 📱 Expo prebuild (Android)
        run: npx expo prebuild --platform android

      - name: 🔨 Build Android (Local)
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

      - name: ✅ Validate Android APK
        run: |
          if [ -f android/app/build/outputs/apk/release/app-release.apk ]; then
            echo "✅ Android build successful"
            ls -la android/app/build/outputs/apk/release/
          else
            echo "❌ Android build failed"
            exit 1
          fi

      - name: 🍎 Setup iOS build environment
        if: runner.os == 'macOS'
        run: |
          npx expo prebuild --platform ios --clear
          cd ios && xcodebuild -workspace *.xcworkspace -scheme * -configuration Release -archivePath build/App.xcarchive archive CODE_SIGNING_ALLOWED=NO

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test-and-lint
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔒 Run npm audit
        run: npm audit --audit-level moderate

      - name: 🛡️ Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high